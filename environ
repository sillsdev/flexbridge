# Environment settings for Flexbridge, such as to run with the SIL version of mono and find the right geckofx.

# These setting assume that the packaged SIL Mono is installed in /opt/mono-sil.
# Note that this file is intended to be "sourced", not "executed". For example: cd HERE && . environ
# You must first cd to the directory containing this script.
# Alternatively, use ./run-in-environ rather than manually sourcing environ.

BASE="$(pwd)"
[ -z "$BUILD" ] && BUILD=DebugMono
[ -z "$MONO_PREFIX" ] && MONO_PREFIX=/opt/mono5-sil

# Are we running as installed from a package, or on a development machine?
case "$(pwd)" in
    /usr/*) RUNMODE=INSTALLED ;;
    *) RUNMODE= ;;
esac

# Are we running as installed from a package, or on a development machine?
case "$(pwd)" in
    /usr/*) RUNMODE=INSTALLED ;;
    *) RUNMODE= ;;
esac

# Dependency locations
. ./environ-xulrunner
GDK_SHARP=/usr/lib/cli/gdk-sharp-2.0

MONO_RUNTIME=v4.0.30319
MONO_PATH="${GDK_SHARP}:${MONO_PATH}"
MONO_DEBUG=explicit-null-checks
MONO_ENV_OPTIONS="-O=-gshared"

################################################################################################

# Add both the user installation directory and the developer build output path to the paths
# (so things work in both situations).
LD_LIBRARY_PATH="${BASE}:${BASE}/output/${BUILD}:${LD_LIBRARY_PATH}"
MONO_PATH="${BASE}:${BASE}/output/${BUILD}:${MONO_PATH}"
	PATH="${BASE}/output/${BUILD}:${PATH}"

################################################################################################

PATH="${MONO_PREFIX}/bin:${PATH}"
LD_LIBRARY_PATH="${MONO_PREFIX}/lib:${LD_LIBRARY_PATH}"
MONO_GAC_PREFIX="${MONO_PREFIX}:/usr"
	# We also add the default values for PKG_CONFIG_PATH - MonoDevelop resets the PKG_CONFIG_PATH
	# environment variable if we're running under a different Mono runtime so that some
	# packages that got installed in standard locations can't be found otherwise.
	PKG_CONFIG_PATH="${MONO_PREFIX}/lib/pkgconfig:${PKG_CONFIG_PATH}:/usr/local/lib/pkgconfig:/lib/pkgconfig:/usr/lib/pkgconfig"

################################################################################################

MONO_TRACE_LISTENER="Console.Out"
#MONO_IOMAP=case
MONO_MWF_SCALING=disable
# if debugging for performance unset DEBUG_ENABLE_PTR_VALIDATION env var.
#export DEBUG_ENABLE_PTR_VALIDATION=1

export \
	PATH LD_LIBRARY_PATH PKG_CONFIG_PATH LD_PRELOAD \
	MONO_PATH \
	MONO_RUNTIME MONO_PREFIX MONO_GAC_PREFIX \
	MONO_TRACE_LISTENER MONO_IOMAP MONO_MWF_SCALING \
	MONO_DEBUG MONO_ENV_OPTIONS

# prevent Gecko from printing scary message about "double free or corruption" on shutdown
# (See FWNX-1216.)  Tom Hindle suggested this hack as a stopgap.
export MALLOC_CHECK_=0

# set HGRCPATH so that we ignore ~/.hgrc files which might have content that is
# incompatible with our version of Mercurial
export HGRCPATH=

#sets keyboard input method to none
unset XMODIFIERS
