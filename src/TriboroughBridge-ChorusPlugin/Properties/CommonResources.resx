<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
	Microsoft ResX Schema

	Version 2.0

	The primary goals of this format is to allow a simple XML format
	that is mostly human readable. The generation and parsing of the
	various data types are done through the TypeConverter classes
	associated with the data types.

	Example:

	... ado.net/XML headers & schema ...
	<resheader name="resmimetype">text/microsoft-resx</resheader>
	<resheader name="version">2.0</resheader>
	<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
	<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
	<data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
	<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
	<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
		<value>[base64 mime encoded serialized .NET Framework object]</value>
	</data>
	<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
		<value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
		<comment>This is a comment</comment>
	</data>

	There are any number of "resheader" rows that contain simple
	name/value pairs.

	Each data row contains a name, and value. The row also contains a
	type or mimetype. Type corresponds to a .NET class that support
	text/value conversion through the TypeConverter architecture.
	Classes that don't support this are serialized and stored with the
	mimetype set.

	The mimetype is used for serialized objects, and tells the
	ResXResourceReader how to depersist the object. This is currently not
	extensible. For a given mimetype the value must be set accordingly:

	Note - application/x-microsoft.net.object.binary.base64 is the format
	that the ResXResourceWriter will generate, however the reader can
	read any of the formats listed below.

	mimetype: application/x-microsoft.net.object.binary.base64
	value   : The object must be serialized with
			: System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

	mimetype: application/x-microsoft.net.object.soap.base64
	value   : The object must be serialized with
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

	mimetype: application/x-microsoft.net.object.bytearray.base64
	value   : The object must be serialized into a byte array
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
	<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
	<xsd:element name="root" msdata:IsDataSet="true">
	  <xsd:complexType>
		<xsd:choice maxOccurs="unbounded">
		  <xsd:element name="metadata">
			<xsd:complexType>
			  <xsd:sequence>
				<xsd:element name="value" type="xsd:string" minOccurs="0" />
			  </xsd:sequence>
			  <xsd:attribute name="name" use="required" type="xsd:string" />
			  <xsd:attribute name="type" type="xsd:string" />
			  <xsd:attribute name="mimetype" type="xsd:string" />
			  <xsd:attribute ref="xml:space" />
			</xsd:complexType>
		  </xsd:element>
		  <xsd:element name="assembly">
			<xsd:complexType>
			  <xsd:attribute name="alias" type="xsd:string" />
			  <xsd:attribute name="name" type="xsd:string" />
			</xsd:complexType>
		  </xsd:element>
		  <xsd:element name="data">
			<xsd:complexType>
			  <xsd:sequence>
				<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
				<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
			  </xsd:sequence>
			  <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
			  <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
			  <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
			  <xsd:attribute ref="xml:space" />
			</xsd:complexType>
		  </xsd:element>
		  <xsd:element name="resheader">
			<xsd:complexType>
			  <xsd:sequence>
				<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
			  </xsd:sequence>
			  <xsd:attribute name="name" type="xsd:string" use="required" />
			</xsd:complexType>
		  </xsd:element>
		</xsd:choice>
	  </xsd:complexType>
	</xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
	<value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
	<value>2.0</value>
  </resheader>
  <resheader name="reader">
	<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
	<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="kAlreadyRunning" xml:space="preserve">
	<value>There is already a copy of FLExBridge running.
You probably have a Conflict Report open. It will need to be closed before you can access any of the other FLExBridge functions such as:
-- Send/Receive Project
-- Receive Project from a colleague
-- View Conflict Report (can't have two open)</value>
  </data>
  <data name="kFLExBridge" xml:space="preserve">
	<value>FLEx Bridge</value>
  </data>
  <data name="ObtainProjectView_DialogTitle" xml:space="preserve">
	<value>Receive project</value>
  </data>
  <data name="kFlexNotListening" xml:space="preserve">
	<value>FLEx isn't listening.</value>
  </data>
  <data name="kFlexProjectExists" xml:space="preserve">
	<value>Could not obtain the new project, because one with the same name already exists.</value>
  </data>
  <data name="kObtainProject" xml:space="preserve">
	<value>Obtain project</value>
  </data>
  <data name="kMovingRepo" xml:space="preserve">
	<value>Moving obtained project to final location.</value>
  </data>
  <data name="kEmptyRepoMsg" xml:space="preserve">
	<value>This repository has no data in it yet. Before you can get data from this repository, someone needs to send project data to this repository.</value>
  </data>
  <data name="kRepoProblem" xml:space="preserve">
	<value>Empty Repository</value>
  </data>
  <data name="kYourVersionIsCurrent" xml:space="preserve">
	<value>Your version is current.</value>
  </data>
  <data name="KFlexBridgeVersion" xml:space="preserve">
	<value>FLEx Bridge Version</value>
  </data>
  <data name="kNewerVersionAvailablePattern" xml:space="preserve">
	<value>Your version is '{0}'. A newer version '{1}' exists. Do you want to download it?</value>
  </data>
  <data name="kHowToSendReceiveExtantRepository" xml:space="preserve">
	<value>To Send/Receive that project, open it and use Send/Receive &gt; Project (or Lexicon).</value>
  </data>
  <data name="kCannotCheckForUpdateNow" xml:space="preserve">
	<value>Sorry. FLEx Bridge was not able to check for an update right now.</value>
  </data>
  <data name="kCheckForUpdateFailure" xml:space="preserve">
	<value>Check for Update Failure</value>
  </data>
  <data name="kFlexUpdateRequired" xml:space="preserve">
	<value>You will need to update your version of Flex to obtain the requested project, since it is newer.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="chorus32x32" type="System.Resources.ResXFileRef, System.Windows.Forms">
	<value>../Resources/chorus32x32.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="kInvalidCommandLineOptions" xml:space="preserve">
	<value>Invalid command line options. Please launch from FLEx.</value>
  </data>
  <data name="chorus" type="System.Resources.ResXFileRef, System.Windows.Forms">
	<value>../Resources/chorus.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="kNoCommandLineOptions" xml:space="preserve">
    <value>It looks like you've run FLEx Bridge directly, either at the command line or by double-clicking. If you are trying to Send/Receive your project, please open your project in FLEx and choose the appropriate option from the Send/Receive menu. To learn how to use FLEx Bridge, please open FLEx and choose Send/Receive &gt; Help...</value>
    <comment>Message displayed when FLEx Bridge is run without any command line options</comment>
  </data>
</root>