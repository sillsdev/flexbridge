//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIL.LiftBridge.Properties {
	using System;


	/// <summary>
	///   A strongly-typed resource class, for looking up localized strings, etc.
	/// </summary>
	// This class was auto-generated by the StronglyTypedResourceBuilder
	// class via a tool like ResGen or Visual Studio.
	// To add or remove a member, edit your .ResX file then rerun ResGen
	// with the /str option, or rebuild your VS project.
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	public class Resources {

		private static global::System.Resources.ResourceManager resourceMan;

		private static global::System.Globalization.CultureInfo resourceCulture;

		[global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
		internal Resources() {
		}

		/// <summary>
		///   Returns the cached ResourceManager instance used by this class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		public static global::System.Resources.ResourceManager ResourceManager {
			get {
				if (object.ReferenceEquals(resourceMan, null)) {
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SIL.LiftBridge.Properties.Resources", typeof(Resources).Assembly);
					resourceMan = temp;
				}
				return resourceMan;
			}
		}

		/// <summary>
		///   Overrides the current thread's CurrentUICulture property for all
		///   resource lookups using this strongly typed resource class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		public static global::System.Globalization.CultureInfo Culture {
			get {
				return resourceCulture;
			}
			set {
				resourceCulture = value;
			}
		}

		public static System.Drawing.Icon chorus {
			get {
				object obj = ResourceManager.GetObject("chorus", resourceCulture);
				return ((System.Drawing.Icon)(obj));
			}
		}

		public static System.IO.UnmanagedMemoryStream errorSound {
			get {
				return ResourceManager.GetStream("errorSound", resourceCulture);
			}
		}

		public static System.IO.UnmanagedMemoryStream finishedSound {
			get {
				return ResourceManager.GetStream("finishedSound", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to basic.
		/// </summary>
		public static string kBasicFailureFileContents {
			get {
				return ResourceManager.GetString("kBasicFailureFileContents", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to FLEx reported it was not able to do the initial import. Lift Bridge will protect its shared data from loss by requiring FLEx to retry the initial import, until it is successful. Retry attempts will start with the next Send/Receive attempt. Sorry for the inconvenience, but a new version of FLEx will likely be required in order to continue using Send/Receive..
		/// </summary>
		public static string kBasicImportFailureMessage {
			get {
				return ResourceManager.GetString("kBasicImportFailureMessage", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to &apos;Cancel&apos; means: &apos;Get me out of here. I&apos;d rather not do Send/Receive now.&apos;.
		/// </summary>
		public static string kCancelGetMeOutOfHere {
			get {
				return ResourceManager.GetString("kCancelGetMeOutOfHere", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Cannot clone onto an existing directory ({0}).
		/// </summary>
		public static string kCloneTrouble {
			get {
				return ResourceManager.GetString("kCloneTrouble", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Did not get an existing Lift system..
		/// </summary>
		public static string kDidNotCloneSystem {
			get {
				return ResourceManager.GetString("kDidNotCloneSystem", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
		///&lt;lift version=&apos;0.13&apos;&gt;
		///&lt;/lift&gt;.
		/// </summary>
		public static string kEmptyLiftFileXml {
			get {
				return ResourceManager.GetString("kEmptyLiftFileXml", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
		///&lt;lift-ranges&gt;
		///&lt;/lift-ranges&gt;.
		/// </summary>
		public static string kEmptyLiftRangesFileXml {
			get {
				return ResourceManager.GetString("kEmptyLiftRangesFileXml", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Error.
		/// </summary>
		public static string kError {
			get {
				return ResourceManager.GetString("kError", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Existing Shared System Found.
		/// </summary>
		public static string kExistingSharedStstemTitle {
			get {
				return ResourceManager.GetString("kExistingSharedStstemTitle", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Export LIFT Lexicon.
		/// </summary>
		public static string kExportLiftLexicon {
			get {
				return ResourceManager.GetString("kExportLiftLexicon", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to There seems to be an existing folder that could be used, but it is not empty. Do you want to use it?.
		/// </summary>
		public static string kExtantNonEmptyFolder {
			get {
				return ResourceManager.GetString("kExtantNonEmptyFolder", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to There seems to be an existing shared system that could be used. Do you want to use it?.
		/// </summary>
		public static string kExtantSharedSystem {
			get {
				return ResourceManager.GetString("kExtantSharedSystem", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Fixing relation links between imported entries.
		/// </summary>
		public static string kFixingRelationLinks {
			get {
				return ResourceManager.GetString("kFixingRelationLinks", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to FLEx reported that it was not able to export its lexicon, so the Send / Receive cannot continue..
		/// </summary>
		public static string kFlexExportProblemMessage {
			get {
				return ResourceManager.GetString("kFlexExportProblemMessage", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to FLEx export problem.
		/// </summary>
		public static string kFlexExportProblemTitle {
			get {
				return ResourceManager.GetString("kFlexExportProblemTitle", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to FLEx Import failure.
		/// </summary>
		public static string kFlexImportFailureTitle {
			get {
				return ResourceManager.GetString("kFlexImportFailureTitle", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to FLEx isn&apos;t listening..
		/// </summary>
		public static string kFlexNotListening {
			get {
				return ResourceManager.GetString("kFlexNotListening", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to FLEx reported it was not able to import the changes received. Lift Bridge will protect its shared data from loss by requiring FLEx to retry the import, until it is successful. Retry attempts will start with the next Send/Receive attempt. Sorry for the inconvenience, but a new version of FLEx will likely be required in order to continue using Send/Receive..
		/// </summary>
		public static string kFlexStandardImportFailureMessage {
			get {
				return ResourceManager.GetString("kFlexStandardImportFailureMessage", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Import LIFT Lexicon.
		/// </summary>
		public static string kImportLiftlexicon {
			get {
				return ResourceManager.GetString("kImportLiftlexicon", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Invalid command line options. Please launch from FLEx..
		/// </summary>
		public static string kInvalidCommandLine {
			get {
				return ResourceManager.GetString("kInvalidCommandLine", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to LIFT Collaboration.
		/// </summary>
		public static string kLabel {
			get {
				return ResourceManager.GetString("kLabel", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Lift Bridge.
		/// </summary>
		public static string kLiftBridge {
			get {
				return ResourceManager.GetString("kLiftBridge", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to LiftBridge Processing.
		/// </summary>
		public static string kLiftBridgeProcessing {
			get {
				return ResourceManager.GetString("kLiftBridgeProcessing", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to LIFT Lexicon File (*.lift)|*.lift.
		/// </summary>
		public static string kLiftFileFilter {
			get {
				return ResourceManager.GetString("kLiftFileFilter", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Lift Setup.
		/// </summary>
		public static string kLiftSetUp {
			get {
				return ResourceManager.GetString("kLiftSetUp", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Migrating from LIFT version {0} to version {1}.
		/// </summary>
		public static string kLiftVersionMigration {
			get {
				return ResourceManager.GetString("kLiftVersionMigration", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Loading various lists for lookup during import.
		/// </summary>
		public static string kLoadingListInfo {
			get {
				return ResourceManager.GetString("kLoadingListInfo", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Locate Lift File.
		/// </summary>
		public static string kLocateLiftFile {
			get {
				return ResourceManager.GetString("kLocateLiftFile", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Locate a networked *computer* that is to contain the shared LIFT data..
		/// </summary>
		public static string KLocateNetworkedComputer {
			get {
				return ResourceManager.GetString("KLocateNetworkedComputer", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to The selected LIFT file appears to have been simply exported, and cannot be used for sharing. Please try another LIFT file..
		/// </summary>
		public static string kLoneLiftFileWarning {
			get {
				return ResourceManager.GetString("kLoneLiftFileWarning", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Existing Non-empty Folder Found.
		/// </summary>
		public static string kNonEmptyFolderTitle {
			get {
				return ResourceManager.GetString("kNonEmptyFolderTitle", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Not a networked computer.
		/// </summary>
		public static string kNotNetworkedComputer {
			get {
				return ResourceManager.GetString("kNotNetworkedComputer", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Something went wrong while FLEx was attempting to import {0}..
		/// </summary>
		public static string kProblem {
			get {
				return ResourceManager.GetString("kProblem", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Something went wrong trying to import {0} while merging...
		/// </summary>
		public static string kProblemImportWhileMerging {
			get {
				return ResourceManager.GetString("kProblemImportWhileMerging", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Problem Merging.
		/// </summary>
		public static string kProblemMerging {
			get {
				return ResourceManager.GetString("kProblemMerging", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to This operation cannot be undone..
		/// </summary>
		public static string kRedoDescription {
			get {
				return ResourceManager.GetString("kRedoDescription", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Value for RepositoryIdentifier may not be null or an empty string..
		/// </summary>
		public static string kRepoIdNotNull {
			get {
				return ResourceManager.GetString("kRepoIdNotNull", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to The selection does not appear to be a networked computer..
		/// </summary>
		public static string kSelectionIsNotANetworkedComputer {
			get {
				return ResourceManager.GetString("kSelectionIsNotANetworkedComputer", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Chorus Send/Receive.
		/// </summary>
		public static string kSendReceive {
			get {
				return ResourceManager.GetString("kSendReceive", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Exporting {0} entries from the lexicon.
		/// </summary>
		public static string ksExportingEntries {
			get {
				return ResourceManager.GetString("ksExportingEntries", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Sharing Attempt Cancelled.
		/// </summary>
		public static string kSharingAttempCancelled {
			get {
				return ResourceManager.GetString("kSharingAttempCancelled", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to standard.
		/// </summary>
		public static string kStandardFailureFileContents {
			get {
				return ResourceManager.GetString("kStandardFailureFileContents", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to LIFT Bridge: {0}.
		/// </summary>
		public static string kTitle {
			get {
				return ResourceManager.GetString("kTitle", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to The Lift obtain strategy does not support the giving controller action..
		/// </summary>
		public static string kUnsupportedControllerActionForLiftObtain {
			get {
				return ResourceManager.GetString("kUnsupportedControllerActionForLiftObtain", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Unsupported LIFT file.
		/// </summary>
		public static string kUnsupportedLiftFile {
			get {
				return ResourceManager.GetString("kUnsupportedLiftFile", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to  &apos;Ok&apos; means &apos;I feel lucky. Delete everything in it and re-use it.&apos;.
		/// </summary>
		public static string kUseExtantNonEmptyFolder {
			get {
				return ResourceManager.GetString("kUseExtantNonEmptyFolder", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to  &apos;Yes&apos; means: &apos;I feel lucky. Use it.&apos;.
		/// </summary>
		public static string kUseExtantRepo {
			get {
				return ResourceManager.GetString("kUseExtantRepo", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to The user seems to have cancelled the sharing attempt..
		/// </summary>
		public static string kUserCancelledCloneOperation {
			get {
				return ResourceManager.GetString("kUserCancelledCloneOperation", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to This utility allows for: 1) exporting FLEx lexical data in the LIFT format, 2) sending it to other LIFT users, and 3) receiving entries from them..
		/// </summary>
		public static string kWhatDescription {
			get {
				return ResourceManager.GetString("kWhatDescription", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to When you want to share lexical entries with another application that uses LIFT data..
		/// </summary>
		public static string kWhenDescription {
			get {
				return ResourceManager.GetString("kWhenDescription", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to  &apos;No&apos; means: &apos;Wipe it out and start fresh.&apos;.
		/// </summary>
		public static string kWIpeOutExtantRepoAndReuseFolder {
			get {
				return ResourceManager.GetString("kWIpeOutExtantRepoAndReuseFolder", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Folder Already Exists.
		/// </summary>
		public static string lFolderAlreadyExists {
			get {
				return ResourceManager.GetString("lFolderAlreadyExists", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Receive project.
		/// </summary>
		public static string ObtainProjectView_DialogTitle {
			get {
				return ResourceManager.GetString("ObtainProjectView_DialogTitle", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Send/Receive Project.
		/// </summary>
		public static string SendReceiveView_DialogTitle {
			get {
				return ResourceManager.GetString("SendReceiveView_DialogTitle", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Send/Receive Lexicon (LIFT).
		/// </summary>
		public static string SendReceiveView_DialogTitleLift {
			get {
				return ResourceManager.GetString("SendReceiveView_DialogTitleLift", resourceCulture);
			}
		}
	}
}
