# Fetch and provide localizations
#
# Copyright (c) 2021 SIL International. MIT License.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Localizations

on:
# This build should probably only run when requested to update to update the
# localizations, rather than as a result of new code.
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        # As of 2021-12, dotnet 2.1, not 3.1, is still needed for overcrowdin.
        dotnet-version: 2.1.x
    - name: Download crowdin localizations
      env:
        CROWDIN_API_KEY: ${{ secrets.CROWDIN_API_KEY }}
      run: |
        set -xueo pipefail
        make fetch_l10ns
        mkdir -p artifacts
        mv -v l10n/FieldWorksL10ns.zip artifacts/
    - name: Determine build version
      run: |
        set -xueo pipefail
        git fetch --unshallow
        # A later enhancement could make use of gitversion.
        BUILD_VERSION="$(git describe)"
        # It's a bit misleading to name the tag after where we are in the
        # repository, because the crowdin l10ns fetched are generated from
        # possibly a different commit.
        TAG_NAME="l10n-${BUILD_VERSION}"

        # Set BRANCH_NAME to the branch targetted by a PR, if this is a PR, or to
        # the name of the current branch, if this is not a PR. eg 'refs/heads/develop'.
        BRANCH_NAME=${{github.base_ref}}
        [[ -n ${BRANCH_NAME} ]] || BRANCH_NAME=${{github.ref}}

        echo >> "${GITHUB_ENV}" "BUILD_VERSION=${BUILD_VERSION}"
        echo >> "${GITHUB_ENV}" "TAG_NAME=${TAG_NAME}"
        echo >> "${GITHUB_ENV}" "BRANCH_NAME=${BRANCH_NAME}"
    - name: Publish artifacts as Github release
      uses: ncipollo/release-action@v1.8.6
      with:
        artifacts: "artifacts/*"
        prerelease: false
        # Branch to build from
        commit: "${{ env.BRANCH_NAME }}"
        # Name of new tag to be created
        tag: "${{ env.TAG_NAME }}"
        allowUpdates: true
        artifactErrorsFailBuild: true
        # Name of release
        name: "${{env.TAG_NAME}}-${{env.BRANCH_NAME}}"
        body: "Crowdin localizations"
        token: ${{ secrets.GITHUB_TOKEN }}
